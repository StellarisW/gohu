syntax = "v1"

info(
	title: "user-api"
	desc: "user-api"
	author: "StellarisW"
)

type (
	RegisterReq {
		Username string `form:"username"`
		Password string `form:"password"`
	}
	RegisterRes {
		Code int32  `json:"code"`
		Msg  string `json:"msg"`
		Ok   bool   `json:"ok"`
	}

	LoginReq {
		Username string `form:"username"`
		Password string `form:"password"`
	}

	LoginResData {
		AccessToken  string `json:"access_token"`
		RefreshToken string `json:"refresh_token"`
	}
	LoginRes {
		Code int32        `json:"code"`
		Msg  string       `json:"msg"`
		Ok   bool         `json:"ok"`
		Data LoginResData `json:"data"`
	}

	ChangeNicknameReq {
		Nickname string `form:"nickname"`
	}
	ChangeNicknameRes {
		Code int32  `json:"code"`
		Msg  string `json:"msg"`
		Ok   bool   `json:"ok"`
	}

	CreateCollectionReq {
		CollectionType int32 `json:"collection_type"`
		ObjType        int32 `form:"obj_type"`
		ObjId          int64 `form:"obj_id"`
	}
	CreateCollectionRes {
		Code int32  `json:"code"`
		Msg  string `json:"msg"`
		Ok   bool   `json:"ok"`
	}

	DeleteCollectionReq {
		CollectionId int64 `path:"collection_id"`
	}
	DeleteCollectionRes {
		Code int32  `json:"code"`
		Msg  string `json:"msg"`
		Ok   bool   `json:"ok"`
	}

	GetObjInfoReq {
		ObjType int32 `path:"obj_type"`
	}
	GetObjInfoResData {
		Ids []int64 `json:"ids"`
	}
	GetObjInfoRes {
		Code int32             `json:"code"`
		Msg  string            `json:"msg"`
		Ok   bool              `json:"ok"`
		Data GetObjInfoResData `json:"data"`
	}

	GetPersonalInfoReq {
		UserId int64 `path:"user_id"`
	}
	GetPersonalInfoResData {
		Username string `json:"username"`
		Nickname string `json:"nickname"`
		Email    string `json:"email"`
		Phone    string `json:"phone"`
		Vip      int32  `json:"vip"`
	}
	GetPersonalInfoRes {
		Code int32                  `json:"code"`
		Msg  string                 `json:"msg"`
		Ok   bool                   `json:"ok"`
		Data GetPersonalInfoResData `json:"data"`
	}

	GetCollectionInfoReq {
		CollectionType int32 `json:"collection_type"`
	}
	GetCollectionInfoResData {
		ObjType []int32 `json:"obj_type"`
		ObjId   []int64 `json:"obj_id"`
	}
	GetCollectionInfoRes {
		Code int32                    `json:"code"`
		Msg  string                   `json:"msg"`
		Ok   bool                     `json:"ok"`
		Data GetCollectionInfoResData `json:"data"`
	}

	GetNotificationInfoReq {
		MessageType int32 `path:"message_type"`
	}
	GetNotificationInfoResData {
		MessageIds []int64 `json:"message_ids"`
	}
	GetNotificationInfoRes {
		Code int32                      `json:"code"`
		Msg  string                     `json:"msg"`
		Ok   bool                       `json:"ok"`
		Data GetNotificationInfoResData `json:"data"`
	}

	VipUpgradeReq {
	}
	VipUpgradeResData {
		VipLevel int32 `json:"vip_level"`
	}
	VipUpgradeRes {
		Code int32             `json:"code"`
		Msg  string            `json:"msg"`
		Ok   bool              `json:"ok"`
		Data VipUpgradeResData `json:"data"`
	}

	VipResetReq {
	}
	VipResetRes {
		Code int32  `json:"code"`
		Msg  string `json:"msg"`
		Ok   bool   `json:"ok"`
	}
)

//@server(
//	middleware: AgentInfoMiddleware
//)
service user {
	@doc(
		summary: "user services"
	)
	@handler Register
	post /api/user/register (RegisterReq) returns (RegisterRes)
	
	@handler Login
	post /api/user/login (LoginReq) returns (LoginRes)
	
}

@server(
	middleware: AuthMiddleware
)
service user {
	@handler ChangeNickname
	post /api/user/nickname (ChangeNicknameReq) returns (ChangeNicknameRes)
	
	@handler CreateCollection
	post /api/user/collection (CreateCollectionReq) returns (CreateCollectionRes)
	
	@handler DeleteCollection
	delete /api/user/collection/:collectionId (DeleteCollectionReq) returns (DeleteCollectionRes)
	
	@handler GetObjInfo
	get /api/user/obj/:obj_type (GetObjInfoReq) returns (GetObjInfoRes)
	
	@handler GetPersonalInfo
	get /api/user/profile/:userId (GetPersonalInfoReq) returns (GetPersonalInfoRes)
	
	@handler GetCollectionInfo
	get /api/user/collection (GetCollectionInfoReq) returns (GetCollectionInfoRes)
	
	@handler GetNotificationInfo
	get /api/user/notification/:messageType (GetNotificationInfoReq) returns (GetNotificationInfoRes)
	
	@handler VipUpgrade
	post /api/user/vip/upgrade (VipUpgradeReq) returns (VipUpgradeRes)
	
	@handler VipReset
	post /api/user/vip/reset (VipResetReq) returns (VipResetRes)
}