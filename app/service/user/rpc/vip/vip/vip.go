// Code generated by goctl. DO NOT EDIT!
// Source: vip.proto

package vip

import (
	"context"

	"main/app/service/user/rpc/vip/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ResetReq        = pb.ResetReq
	ResetRes        = pb.ResetRes
	UpgradeReq      = pb.UpgradeReq
	UpgradeRes      = pb.UpgradeRes
	UpgradeRes_Data = pb.UpgradeRes_Data

	Vip interface {
		Upgrade(ctx context.Context, in *UpgradeReq, opts ...grpc.CallOption) (*UpgradeRes, error)
		Reset(ctx context.Context, in *ResetReq, opts ...grpc.CallOption) (*ResetRes, error)
	}

	defaultVip struct {
		cli zrpc.Client
	}
)

func NewVip(cli zrpc.Client) Vip {
	return &defaultVip{
		cli: cli,
	}
}

func (m *defaultVip) Upgrade(ctx context.Context, in *UpgradeReq, opts ...grpc.CallOption) (*UpgradeRes, error) {
	client := pb.NewVipClient(m.cli.Conn())
	return client.Upgrade(ctx, in, opts...)
}

func (m *defaultVip) Reset(ctx context.Context, in *ResetReq, opts ...grpc.CallOption) (*ResetRes, error) {
	client := pb.NewVipClient(m.cli.Conn())
	return client.Reset(ctx, in, opts...)
}
