syntax = "v1"

info(
	title: "user-api"
	desc: "user-api"
	author: "StellarisW"
)

type (
	CommentSubject {
		Id         int64  `json:"id"`
		ObjType    int32  `json:"obj_type"`
		ObjId      int64  `json:"obj_id"`
		Count      int32  `json:"count"`
		RootCount  int32  `json:"root_count"`
		State      int32  `json:"state"`
		Attrs      int32  `json:"attrs"`
		CreateTime string `json:"create_time"`
		UpdateTime string `json:"update_time"`
	}

	CommentIndex {
		Id           int64  `json:"id"`
		SubjectId    int64  `json:"subject_id"`
		UserId       int64  `json:"user_id"`
		IpLoc        string `json:"ip_loc"`
		RootId       int64  `json:"root_id"`
		CommentFloor int32  `json:"comment_floor"`
		CommentId    int64  `json:"comment_id"`
		ReplyFloor   int32  `json:"reply_floor"`
		ApproveCount int32  `json:"approve_count"`
		State        int32  `json:"state"`
		Attrs        int32  `json:"attrs"`
		CreateTime   string `json:"create_time"`
		UpdateTime   string `json:"update_time"`
	}

	CommentContent {
		CommentId  int64  `json:"comment_id"`
		Content    string `json:"content"`
		Meta       string `json:"meta"`
		CreateTime string `json:"create_time"`
		UpdateTime string `json:"update_time"`
	}

	CrudReq {
		Action string `form:"action"`
		Data   string `form:"data"`
	}
	CrudRes {
		Code int32  `json:"code"`
		Msg  string `json:"msg"`
		Ok   bool   `json:"ok"`
	}

	GetCommentSubjectIdReq {
		ObjType int32 `path:"obj_type"`
		ObjId   int64 `path:"obj_id"`
	}
	GetCommentSubjectIdResData {
		SubjectId int64 `json:"subject_id"`
	}
	GetCommentSubjectIdRes {
		Code int32                      `json:"code"`
		Msg  string                     `json:"msg"`
		Ok   bool                       `json:"ok"`
		Data GetCommentSubjectIdResData `json:"data"`
	}

	GetCommentSubjectInfoReq {
		SubjectId int64 `path:"subject_id"`
	}
	GetCommentSubjectInfoResData {
		CommentSubject CommentSubject `json:"comment_subject"`
	}
	GetCommentSubjectInfoRes {
		Code int32                        `json:"code"`
		Msg  string                       `json:"msg"`
		Ok   bool                         `json:"ok"`
		Data GetCommentSubjectInfoResData `json:"data"`
	}

	GetCommentInfoReq {
		CommentId int64 `path:"comment_id"`
	}
	GetCommentInfoResData {
		CommentIndex   CommentIndex   `json:"comment_index"`
		CommentContent CommentContent `json:"comment_content"`
	}
	GetCommentInfoRes {
		Code int32                 `json:"code"`
		Msg  string                `json:"msg"`
		Ok   bool                  `json:"ok"`
		Data GetCommentInfoResData `json:"data"`
	}

	GetCommenSubjectIndexReq {
		SubjectId int64 `path:"subject_id"`
		IndexId   int64 `path:"index_id"`
	}
	GetCommenSubjectIndexRes {
		Code int32  `json:"code"`
		Msg  string `json:"msg"`
		Ok   bool   `json:"ok"`
		Data string `json:"data"`
	}
)

@server(
	middleware: AuthMiddleware
)
service comment {
	@handler Crud
	post /api/comment/crud (CrudReq) returns (CrudRes)
}

service comment {
	@handler GetCommentSubjectId
	get /api/comment/subject/:obj_type/:obj_id (GetCommentSubjectIdReq) returns (GetCommentSubjectIdRes)

	@handler GetCommentSubjectInfo
	get /api/comment/subject/:subject_id (GetCommentSubjectInfoReq) returns (GetCommentSubjectInfoRes)

	@handler GetCommentInfo
	get /api/comment/:comment_id (GetCommentInfoReq) returns (GetCommentInfoRes)

	// 使用redis sortedset
	@handler GetCommentSubjectIndex
	get /api/comment/subject/:subject_id/index/:index_id (GetCommenSubjectIndexReq) returns (GetCommenSubjectIndexRes)
}