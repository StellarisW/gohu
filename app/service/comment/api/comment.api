syntax = "v1"

info(
	title: "user-api"
	desc: "user-api"
	author: "StellarisW"
)

type (
	CrudReq {
		Action string `form:"action"`
		Data   string `form:"data"`
	}
	CrudRes {
		Code int32  `json:"code"`
		Msg  string `json:"msg"`
		Ok   bool   `json:"ok"`
	}

	GetCommentSubjectReq {
		SubjectId int64 `path:"subject_id"`
	}
	GetCommentSubjectRes {
		Code int32  `json:"code"`
		Msg  string `json:"msg"`
		Ok   bool   `json:"ok"`
		Data string `json:"data"`
	}

	GetCommentIndexReq {
		IndexId int64 `path:"index_id"`
	}
	GetCommentIndexRes {
		Code int32  `json:"code"`
		Msg  string `json:"msg"`
		Ok   bool   `json:"ok"`
		Data string `json:"data"`
	}

	GetCommenSubjectIndexReq {
		SubjectId int64 `path:"subject_id"`
		IndexId   int64 `path:"index_id"`
	}
	GetCommenSubjectIndexRes {
		Code int32  `json:"code"`
		Msg  string `json:"msg"`
		Ok   bool   `json:"ok"`
		Data string `json:"data"`
	}
)

@server(
	middleware: AuthMiddleware
)
service comment {
	@handler Crud
	post /api/comment/crud (CrudReq) returns (CrudRes)
	
	@handler GetCommentSubject
	get /api/comment/subject/:subjectId (GetCommentSubjectReq) returns (GetCommentSubjectRes)
	
	@handler GetCommentIndex
	get /api/comment/index/:indexId (GetCommentIndexReq) returns (GetCommentIndexRes)

	// 使用redis sortedset
	@handler GetCommentSubjectIndex
	get /api/comment/subject/:subjectIdid/index/:indexId (GetCommenSubjectIndexReq) returns (GetCommenSubjectIndexRes)
}