// Code generated by goctl. DO NOT EDIT!
// Source: token_enhancer.proto

package tokenenhancer

import (
	"context"

	"gohu/app/service/oauth/rpc/token/enhancer/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ClientDetails              = pb.ClientDetails
	CreateAccessTokenReq       = pb.CreateAccessTokenReq
	CreateAccessTokenRes       = pb.CreateAccessTokenRes
	CreateAccessTokenRes_Data  = pb.CreateAccessTokenRes_Data
	GetUserDetailsReq          = pb.GetUserDetailsReq
	GetUserDetailsRes          = pb.GetUserDetailsRes
	GetUserDetailsRes_Data     = pb.GetUserDetailsRes_Data
	OAuth2Details              = pb.OAuth2Details
	OAuth2Token                = pb.OAuth2Token
	ReadTokenReq               = pb.ReadTokenReq
	ReadTokenRes               = pb.ReadTokenRes
	ReadTokenRes_Data          = pb.ReadTokenRes_Data
	RefreshAccessTokenReq      = pb.RefreshAccessTokenReq
	RefreshAccessTokenRes      = pb.RefreshAccessTokenRes
	RefreshAccessTokenRes_Data = pb.RefreshAccessTokenRes_Data
	UserDetails                = pb.UserDetails

	TokenEnhancer interface {
		CreateAccessToken(ctx context.Context, in *CreateAccessTokenReq, opts ...grpc.CallOption) (*CreateAccessTokenRes, error)
		RefreshAccessToken(ctx context.Context, in *RefreshAccessTokenReq, opts ...grpc.CallOption) (*RefreshAccessTokenRes, error)
		ReadOauthToken(ctx context.Context, in *ReadTokenReq, opts ...grpc.CallOption) (*ReadTokenRes, error)
		GetUserDetails(ctx context.Context, in *GetUserDetailsReq, opts ...grpc.CallOption) (*GetUserDetailsRes, error)
	}

	defaultTokenEnhancer struct {
		cli zrpc.Client
	}
)

func NewTokenEnhancer(cli zrpc.Client) TokenEnhancer {
	return &defaultTokenEnhancer{
		cli: cli,
	}
}

func (m *defaultTokenEnhancer) CreateAccessToken(ctx context.Context, in *CreateAccessTokenReq, opts ...grpc.CallOption) (*CreateAccessTokenRes, error) {
	client := pb.NewTokenEnhancerClient(m.cli.Conn())
	return client.CreateAccessToken(ctx, in, opts...)
}

func (m *defaultTokenEnhancer) RefreshAccessToken(ctx context.Context, in *RefreshAccessTokenReq, opts ...grpc.CallOption) (*RefreshAccessTokenRes, error) {
	client := pb.NewTokenEnhancerClient(m.cli.Conn())
	return client.RefreshAccessToken(ctx, in, opts...)
}

func (m *defaultTokenEnhancer) ReadOauthToken(ctx context.Context, in *ReadTokenReq, opts ...grpc.CallOption) (*ReadTokenRes, error) {
	client := pb.NewTokenEnhancerClient(m.cli.Conn())
	return client.ReadOauthToken(ctx, in, opts...)
}

func (m *defaultTokenEnhancer) GetUserDetails(ctx context.Context, in *GetUserDetailsReq, opts ...grpc.CallOption) (*GetUserDetailsRes, error) {
	client := pb.NewTokenEnhancerClient(m.cli.Conn())
	return client.GetUserDetails(ctx, in, opts...)
}
