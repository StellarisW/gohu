// Code generated by goctl. DO NOT EDIT!
// Source: info.proto

package info

import (
	"context"

	"main/app/service/notification/rpc/info/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetNotificationReq      = pb.GetNotificationReq
	GetNotificationRes      = pb.GetNotificationRes
	GetNotificationRes_Data = pb.GetNotificationRes_Data
	NotificationContent     = pb.NotificationContent
	NotificationSubject     = pb.NotificationSubject

	Info interface {
		GetNotification(ctx context.Context, in *GetNotificationReq, opts ...grpc.CallOption) (*GetNotificationRes, error)
	}

	defaultInfo struct {
		cli zrpc.Client
	}
)

func NewInfo(cli zrpc.Client) Info {
	return &defaultInfo{
		cli: cli,
	}
}

func (m *defaultInfo) GetNotification(ctx context.Context, in *GetNotificationReq, opts ...grpc.CallOption) (*GetNotificationRes, error) {
	client := pb.NewInfoClient(m.cli.Conn())
	return client.GetNotification(ctx, in, opts...)
}
